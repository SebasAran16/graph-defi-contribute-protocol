type ActiveAdmin @entity(immuteble: true) {
  id: ID!
  admin: Bytes! #address
}

type DeletedAdmin @entity(immutable: true) {
  id: ID!
  admin: Bytes! #address
}

type ActiveDoneeRequest @entity {
  id: ID!
  donee: Bytes!
  message: String!
}

type ApprovedDonee @entity(immutable: true) {
  id: ID!
  donee: Bytes! # address
}

type ActiveDonee @entity(immutable: true) {
  id: ID!
  cause: String!
  donee: Bytes!
  doneeId: BigInt!
  message: String!
}

type DeletedDonee @entity(immutable: true) {
  id: ID!
  cause: String!
  doneeId: BigInt!
  donee: Bytes!
}

type Donation @entity(immutable: true) {
  id: ID!
  to: Bytes!
  from: Bytes!
  amount: BigInt!
}

type RedFlag @entity(immutable: true) {
  id: ID!
  cause: String!
  doneeId: BigInt!
  donee: Bytes!
  admin: Bytes!
}

type ReadyToRemove @entity(immutable: true) {
  id: ID!
  cause: String!
  doneeId: BigInt!
  donee: Bytes!
}

type SummedToThePool @entity(immutable: true) {
  id: ID!
  amount: BigInt!
}

type Withdrawal @entity(immutable: true) {
  id: ID!
  doneeId: BigInt!
  donee: Bytes!
  proceeds: BigInt!
}

type Owner @entity(immutable: true) {
  id: ID!
  owner: Bytes!
}
type ContractAdminRevoke @entity(immutable: true) {
  id: Bytes!
  admin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractApprovedDonee @entity(immutable: true) {
  id: Bytes!
  donee: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractDonation @entity(immutable: true) {
  id: Bytes!
  to: Bytes! # address
  from: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractDoneeRequestCanceled @entity(immutable: true) {
  id: Bytes!
  donee: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractEliminatedDonee @entity(immutable: true) {
  id: Bytes!
  cause: String! # string
  doneeId: BigInt! # uint256
  donee: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractNewAdmin @entity(immutable: true) {
  id: Bytes!
  admin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractNewDonee @entity(immutable: true) {
  id: Bytes!
  cause: String! # string
  doneeId: BigInt! # uint256
  donee: Bytes! # address
  message: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractNewDoneeRequest @entity(immutable: true) {
  id: Bytes!
  donee: Bytes! # address
  message: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractOwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractReadyToRemove @entity(immutable: true) {
  id: Bytes!
  cause: String! # string
  doneeId: BigInt! # uint256
  wallet: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractRedFlag @entity(immutable: true) {
  id: Bytes!
  cause: String! # string
  doneeId: BigInt! # uint256
  donee: Bytes! # address
  admin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractRejectedDonee @entity(immutable: true) {
  id: Bytes!
  donee: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractSummedToThePool @entity(immutable: true) {
  id: Bytes!
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractWithdrawal @entity(immutable: true) {
  id: Bytes!
  doneeId: BigInt! # uint256
  donee: Bytes! # address
  proceeds: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
